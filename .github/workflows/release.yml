name: 🚀 Build & Release Enigma

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3.5.3  # Versione stabile
      
      - name: 🔢 Estrai versione da Cargo.toml
        id: get_version
        run: |
          VERSION=$(grep '^version' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      
      - name: 🦀 Installa Rust stable
        uses: actions-rs/toolchain@v1.0.7  # Ultima stabile
        with:
          toolchain: stable
          override: true
      
      - name: 📦 Installa cargo-bundle (solo macOS)
        if: matrix.os == 'macos-latest'
        run: cargo install cargo-bundle
      
      - name: ⚙️ Build progetto con OpenSSL vendored
        run: cargo build --release
      
      - name: 📂 Prepara artefatti
        run: |
          mkdir dist
          VERSION=${{ steps.get_version.outputs.version }}
          if [[ "${{ runner.os }}" == "Windows" ]]; then
            cp target/release/enigma.exe dist/enigma-${VERSION}-windows.exe
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            cargo bundle --release
            cp target/release/bundle/osx/*.dmg dist/enigma-${VERSION}-macos.dmg
          else
            tar -czf dist/enigma-${VERSION}-linux.tar.gz -C target/release enigma
          fi
        shell: bash
      
      - name: ☁️ Upload artefatti
        uses: actions/upload-artifact@v3.1.3
        with:
          name: enigma-${{ matrix.os }}
          path: dist/
  
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v3.5.3
      
      - name: ⬇️ Scarica artefatti
        uses: actions/download-artifact@v3.1.3
        with:
          path: artifacts
      
      - name: 🚀 Crea GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: 📢 Notifica fine release
        if: always()
        run: |
          STATUS=${{ job.status }}
          curl -H "Content-Type: application/json" \
               -d "{\"content\": \"🚀 Release completata con stato: $STATUS per Enigma Rust\"}" \
               ${{ secrets.WEBHOOK_URL }}
